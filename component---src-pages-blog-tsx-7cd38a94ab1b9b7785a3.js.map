{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","siteSummary","posts","allMarkdownRemark","edges","title","summary","className","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","color","textTransform","date","readingTime","text","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"6FAAA,0HA6EeA,UA5CG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaF,UACnCG,EAAcL,EAAKG,KAAKC,aAAaC,YACrCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUQ,MAAOP,EAAWQ,QAASL,GACrD,kBAAC,IAAD,CAAKI,MAAM,cACX,yBAAKE,UAAU,SAAQ,uCACpBL,EAAMM,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMT,UAAU,OAAOO,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKE,OAAOC,MAClEP,IAGL,2BAAOS,MAAO,CACZK,MAAK,UACLC,cAAa,cAEZX,EAAKC,YAAYW,KAJpB,MAI6BZ,EAAKE,OAAOW,YAAYC,OAGvD,iCACE,uBACEC,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,kBAa1D,IAAMC,EAAY","file":"component---src-pages-blog-tsx-7cd38a94ab1b9b7785a3.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      siteTitle: string\n      siteSummary: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.siteTitle\n  const siteSummary = data.site.siteMetadata.siteSummary\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle} summary={siteSummary}>\n      <SEO title=\"All posts\" />\n      <div className=\"title\"><h2> Blog </h2></div>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link className=\"link\" style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small style={{\n                  color:`#92a3ab`,\n                  textTransform:`uppercase`\n                }}>\n                  {node.frontmatter.date} | {node.fields.readingTime.text}\n                </small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteTitle\n        siteSummary\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime{\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"DD MMM YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}